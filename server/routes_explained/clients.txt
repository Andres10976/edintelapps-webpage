clients.js:

Function: POST /
Parameters:
- req.body: The request body containing client data
  - name: The name of the client
  - phone: The phone number of the client
  - email: The email address of the client
  - contactName: The name of the contact person
  - contactLastName: The last name of the contact person
  - contactPhone: The phone number of the contact person
  - contactEmail: The email address of the contact person
Functionality:
- Creates a new client with the provided data
Returns:
- 201 Created with a success message if the client is created successfully
- 500 Internal Server Error if an error occurs

Function: GET /
Parameters: None
Functionality:
- Retrieves a list of active clients
Returns:
- Array of client objects containing client details

Function: GET /:id
Parameters:
- req.params.id: The ID of the client to retrieve
Functionality:
- Retrieves a client by their ID
Returns:
- Client object if found
- 404 Not Found if the client is not found
- 500 Internal Server Error if an error occurs

Function: PUT /:id
Parameters:
- req.params.id: The ID of the client to update
- req.body: The request body containing updated client data
  - name: The updated name of the client
  - phone: The updated phone number of the client
  - email: The updated email address of the client
  - contactName: The updated name of the contact person
  - contactLastName: The updated last name of the contact person
  - contactPhone: The updated phone number of the contact person
  - contactEmail: The updated email address of the contact person
Functionality:
- Updates an existing client with the provided data
Returns:
- 200 OK with a success message if the client is updated successfully
- 500 Internal Server Error if an error occurs

Function: DELETE /:id
Parameters:
- req.params.id: The ID of the client to delete
Functionality:
- Delete a client by their ID
Returns:
- Client object if found
- 404 Not Found if the client is not found
- 500 Internal Server Error if an error occurs

Function: GET /:id/sites
Parameters:
- req.params.id: The ID of the client
Functionality:
- Retrieves sites associated with a specific client
Returns:
- Array of site objects containing site details

Function: POST /:id/sites
Parameters:
- req.params.id: The ID of the client
- req.body: The request body containing site data
  - name: The name of the site
  - supervisor: The ID of the supervisor for the site
Functionality:
- Creates a new site for a specific client
Returns:
- 201 Created with a success message if the site is created successfully
- 500 Internal Server Error if an error occurs

Function: PUT /:id/sites/:idSite
Parameters:
- req.params.id: The ID of the client
- req.params.idSite: The ID of the site to update
- req.body: The request body containing updated site data
  - name: The updated name of the site
  - supervisor: The updated ID of the supervisor for the site
  - isActive: The updated active status of the site
Functionality:
- Updates an existing site
Returns:
- 200 OK with a success message if the site is updated successfully
- 500 Internal Server Error if an error occurs

Function: GET /:id/sites/:idSite
Parameters:
- req.params.id: The ID of the client
- req.params.idSite: The ID of the site
Functionality:
- Retrieves a specific site by its ID
Returns:
- Site object if found
- 500 Internal Server Error if an error occurs

Function: GET /:id/sites/:idSite/systems
Parameters:
- req.params.id: The ID of the client
- req.params.idSite: The ID of the site
Functionality:
- Retrieves system types per site
Returns:
- Array of system type objects containing system type details

Function: POST /:id/sites/:idSite/systems/assign
Parameters:
- req.params.id: The ID of the client
- req.params.idSite: The ID of the site
- req.body: The request body containing system assignment data
  - idSystem: The ID of the system to assign
  - idSystemType: The ID of the system type to assign
Functionality:
- Assigns a system to a site
Returns:
- 200 OK with a success message if the system is assigned successfully
- 500 Internal Server Error if an error occurs

Function: PUT /:id/sites/:idSite/systems/disassociate
Parameters:
- req.params.id: The ID of the client
- req.params.idSite: The ID of the site
- req.body: The request body containing system disassociation data
  - idSystem: The ID of the system to disassociate
  - idSystemType: The ID of the system type to disassociate
Functionality:
- Disassociates a system from a site
Returns:
- 200 OK with a success message if the system is disassociated successfully
- 500 Internal Server Error if an error occurs

Function: GET /:id/sites/:idSite/requests
Parameters:
- req.params.id: The ID of the client
- req.params.idSite: The ID of the site
Functionality:
- Retrieves requests associated with a specific site
Returns:
- Array of request objects containing request details

Function: POST /:id/sites/:idSite/requests
Parameters:
- req.params.id: The ID of the client
- req.params.idSite: The ID of the site
- req.body: The request body containing request data
  - code: The code of the request
  - type: The type of the request
  - scope: The scope of the request
  - idSystem: The ID of the system
  - idSystemType: The ID of the system type
Functionality:
- Creates a new request for a specific site
Returns:
- 201 Created with a success message if the request is created successfully
- 500 Internal Server Error if an error occurs

Function: GET /:id/sites/:idSite/requests/:idRequest
Parameters:
- req.params.id: The ID of the client
- req.params.idSite: The ID of the site
- req.params.idRequest: The ID of the request
Functionality:
- Retrieves a specific request by its ID
Returns:
- Request object if found
- 500 Internal Server Error if an error occurs

Function: PUT /:id/sites/:idSite/requests/:idRequest
Parameters:
- req.params.id: The ID of the client
- req.params.idRequest: The ID of the request to update
- req.body: The request body containing updated request data
  - code: The code of the request
  - type: The type of the request
  - scope: The scope of the request
  - idSystem: The ID of the system
Functionality:
- Updates a request
Returns:
- 200 OK with a success message if the request is updated successfully
- 500 Internal Server Error if an error occurs